[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "agent-vf-langgraph"
version = "2.1.3"
description = "Autonomous AI agent for professional thesis generation using LangGraph."
readme = "README.md"
requires-python = ">=3.11,<3.12"
authors = [
  { name = "Rthr Prrt", email = "rthrprrt@example.com" }
]

dependencies = [
  "langchain>=0.1.20,<0.2.0",
  "langgraph>=0.0.48,<0.1.0",
  "langchain-community>=0.0.38,<0.1.0",
  "ollama>=0.2.0,<0.3.0",
  "fastembed>=0.2.7,<0.3.0",
  "faiss-cpu>=1.8.0,<2.0.0",
  "pydantic>=2.7.1,<3.0.0",
  "python-dotenv>=1.0.1,<2.0.0",
  "pypdf>=4.2.0,<5.0.0",
  "python-docx>=1.1.2,<2.0.0",
  "markdownify>=0.11.6,<1.0.0",
  "tiktoken>=0.7.0,<0.8.0"
]

[tool.poetry]
packages = [
  { include = "src" }
]

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
pytest-cov = ">=6.0.0"
ruff = "^0.4.4"
ipykernel = "^6.29.4"

[tool.ruff]
line-length = 88
# select = ["E", "F", "W", "I", "UP", "C90", "N", "D", "S", "BLE", "A", "COM", "PT"] # Ancienne position
# ignore = ["D203", "D212", "D100", "D101", "D102", "D103", "D104", "D107", "COM812"] # Ancienne position

[tool.ruff.lint] # Nouvelle section
select = ["E", "F", "W", "I", "UP", "C90", "N", "D", "S", "BLE", "A", "COM", "PT"] # Nouvelle position
ignore = ["D203", "D212", "D100", "D101", "D102", "D103", "D104", "D107", "COM812"] # Nouvelle position

[tool.ruff.lint.pydocstyle]
convention = "google"
