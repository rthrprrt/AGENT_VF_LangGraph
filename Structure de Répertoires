AGENT_VF_LangGraph/
├── .git/
├── .venv/                   # Créé par Poetry
├── src/      # Package source principal
│   ├── __init__.py
│   ├── nodes/               # Contient les modules pour chaque nœud LangGraph
│   │   ├── __init__.py
│   │   ├── n0_initial_setup.py
│   │   ├── n1_guideline_ingestor.py
│   │   ├── n2_journal_ingestor_anonymizer.py # Sera développé par les spécialistes
│   │   └── ... (autres nœuds)
│   ├── tools/               # Contient les modules pour les outils LangGraph
│   │   ├── __init__.py
│   │   └── t1_journal_context_retriever.py # Sera développé par LLM-RAG-Specialist
│   ├── state.py             # Définition de AgentState
│   ├── graph_assembler.py   # Logique pour assembler et exécuter le graphe principal
│   ├── config.py            # Configurations (modèles LLM, chemins, etc.)
│   └── utils.py             # Fonctions utilitaires
├── data/                    # Données d'entrée non versionnées (ou exemples versionnés)
│   ├── input/
│   │   ├── school_guidelines/  # Ex: Epitech_Mission_Professionnelle.pdf
│   │   └── journal_entries/    # Ex: journal_semaine1.docx, journal_anonymized_chunks/
│   └── processed/           # Données intermédiaires (e.g., vector store)
│       └── vector_store/
├── outputs/                 # Thèses générées, logs détaillés
│   └── theses/
├── tests/                   # Tests unitaires et d'intégration
│   ├── __init__.py
│   ├── nodes/
│   └── tools/
├── .env.example             # Exemple de fichier d'environnement
├── .gitignore
├── pyproject.toml
├── poetry.lock
└── README.md